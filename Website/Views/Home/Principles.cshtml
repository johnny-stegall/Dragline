@{
    ViewBag.Title = "Principles";
}

<h1>Principles</h1>

<p>
  Follow a user-centered design process and aim to be as lean as possible.
  Design following a few simple rules:
</p>

<h2 id="OneFramework">One Framework to Rule Them All</h2>

<p>
  Users should not be locked out of functionality because of their device
  (excluding fringe cases such as browser bugs, device/platform flaws, etc.)
  Scaling up is easier than scaling down: start the user experience from the
  smallest device and expand to larger devices.
</p>

<h2 id="EightyTwenty">The 80/20 Rule</h2>

<p>
  Always use the 80/20 rule. Focus on user's perspective for the 80% and start
  with the happy path; edge cases are important, but they can be mitigated
  against later. When determining defaults, focus on 80% of the users, not 20%;
  the 20% should not dictate how the other 80% use the system or constrain them.
</p>

<h2 id="OnlyOne">There Can Be Only One</h2>

<p>
  The design must communicate one use case above all else; reduce all other use
  cases to the sidelines. What does the user see first? What should they do
  first? It should always be obvious to the user, if it's not, you're doing it
  wrong™.
</p>

<h2 id="Progress">Progress > Perfection</h2>

<p>
  Ensuring quality is important, but on the web, software is a service, not a
  shipped product. Users don't have to test against operating systems, service
  packs, or frameworks, they just need a supported browser. If a bug isn't
  likely to be seen by 80%, it can't be allowed to hold up a release.
</p>

<h2 id="Efficiency">Efficiency</h2>

<p>
  Enable users. Anticipate their next move. Give users what they need and get
  out of their way. Ensure they can achieve their goals quickly. Defaults
  should allow users to fill in as few blanks as possible, while retaining
  flexibility. The UI should be snappy and quick to respond.
</p>

<h2 id="Harmony">Harmony</h2>

<p>
  Every aspect of the user interface needs to be harmonious and consistent. The
  same look – down to colors and fonts – as well as language (including voice)
  allows the user to anticipate what's next. They should use the same design
  language, while allowing room for creativity.
</p>

<h2 id="GracefulDepth">Gracefully Reveal Depth</h2>

<p>
  Break up big chunks of content, data, or processes into smaller pieces that
  are easier for users to digest. Show 'general' information first, then let
  users choose to see more 'specific' details later.
</p>
